Summary: nenchmarking of methods

Description of code:

- utils.py: contains vectorized functions for computing a similarity matrix, an alignment, bitscores, and LDDT

Alignment benchmark for grid search

- alignment_benchmark.ipynb

Search benchmark
- query_list_by_all.py: search a list of queries against a database

    python query_list_by_all.py <npz db calpha coordinate tensor> <csv of list of queries> <npy of BLOSUM matrix> <npz of db of sequences one-hot encoded> 

    outputs:
    - one file per query in the list with name <name of query> located in a folder called results (default) or whatever is specfied by the --out_location flag
    - each file should have one line per database entry, in our case 11211 

    note: 
    - best to make the query list have similar sized proteins to optimizing batch sizes

    # example usage for some BLOSUM matrix
    python query_list_by_all.py ./data/allCACoord.npz ./data/short_test_query_list.csv ./data/nH_mat.npy ./data/nH_oh.npz --out_location test_results_3Dn

    # example usage for two BLOSUM matrices
    python query_list_by_all.py ./data/allCACoord.npz ./data/short_test_query_list.csv ./data/nH_mat.npy ./data/nH_oh.npz --blosum2_path ./data/nH_mat.npy --oh2_path ./data/nH_oh.npz --w1 1.0 --w2 1.0 --gap_open -10 --gap_extend -2 --out_location test_results_3Di_3Dn

    The similarity matrix used for alignment is w1(sim matrix from first BLOSUM) + w2(sim matrix from second BLOSUM)
    
- Snakemake: Calls query_list_by_all

- execute.sh: runs snakemake





